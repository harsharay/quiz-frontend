{"version":3,"sources":["constants.js","Components/Questions/Questions.js","App.js","Components/Results/Results.js","Components/UserData/UserData.js","reportWebVitals.js","Components/Welcome/Welcome.js","index.js"],"names":["GET_USER_DATA","Questions","props","useState","data","setData","actualAnswers","setActualAnswers","userAnswers","setUserAnswers","setFinalScore","testFinished","setTestFinished","error","setError","useEffect","propsData","location","username","fetch","then","json","forEach","item","prevValue","questionId","correctAnswer","marks","handleRadioChange","e","value","target","id","className","onSubmit","preventDefault","score","i","console","log","method","body","JSON","stringify","headers","history","push","pathname","map","index","question","options","ind","type","onChange","name","required","App","to","Results","Fragment","UserData","setUsername","userData","setUserData","loading","setLoading","dataReceived","setDataReceived","placeholder","onClick","getUserDataApiCall","replace","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Welcome","userDataValidationApiCall","toLowerCase","ReactDOM","render","StrictMode","path","component","exact","document","getElementById"],"mappings":"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","file":"static/js/main.50df1da4.chunk.js","sourcesContent":["export const GET_QUESTIONS = 'https://secure-bastion-48741.herokuapp.com/api/getQuestions'\r\n\r\nexport const SAVE_FORM_DATA = 'https://secure-bastion-48741.herokuapp.com/api/saveFormData'\r\n\r\nexport const GET_USER_DATA = 'https://secure-bastion-48741.herokuapp.com/api/getUserData?username=_USERNAME_'\r\n\r\nexport const GET_USERNAME_VALIDATION = 'https://secure-bastion-48741.herokuapp.com/api/usernameValidation?username=_USERNAME_'","import React, { useState, useEffect } from \"react\"\r\n\r\nimport \"./Questions.css\"\r\nimport { GET_QUESTIONS, SAVE_FORM_DATA } from \"../../constants\"\r\n\r\n\r\nconst Questions = (props) => {\r\n\r\n    // const [username, setUsername] = useState(\"\")\r\n    const [data, setData] = useState([])\r\n    // const [questions, setQuestions] = useState([])\r\n    const [actualAnswers, setActualAnswers] = useState([])\r\n    const [userAnswers, setUserAnswers] = useState({})\r\n    const [finalScore, setFinalScore] = useState(0)\r\n    const [testFinished, setTestFinished] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(props.propsData.location.username){\r\n            fetch(GET_QUESTIONS)\r\n            .then(data => data.json())\r\n            .then(json => {\r\n                setData([...json])\r\n                json.forEach(item => {\r\n                    return (\r\n                        setActualAnswers(prevValue => {\r\n                            return {\r\n                                ...prevValue,\r\n                                [item.questionId] : {\r\n                                    correctAnswer : item.correctAnswer, \r\n                                    marks: item.marks\r\n                                }\r\n                            }\r\n                        })\r\n                    )\r\n                })\r\n            })\r\n        } else {\r\n            setError(true)\r\n        }\r\n        \r\n    },[props])\r\n\r\n\r\n    const handleRadioChange = e => {\r\n        let value = e.target.value\r\n        let id = e.target.id\r\n\r\n        //SEND THE RESPONSE BACK TO THE SERVER ONCE THE TEST IS SUBMITTED\r\n        setUserAnswers(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                [id] : value\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let score = 0\r\n        //Comparing the actual answers with user answers and display the score\r\n        for(let i in actualAnswers) {\r\n            console.log(actualAnswers[i].correctAnswer, userAnswers[i], actualAnswers[i].marks)\r\n            if(actualAnswers[i].correctAnswer === userAnswers[i]) {\r\n                score += actualAnswers[i].marks\r\n            } else {\r\n                score -= actualAnswers[i].marks/4\r\n            }\r\n            \r\n        }\r\n        setFinalScore(score)\r\n        setTestFinished(true)\r\n\r\n        //Calling the POST API\r\n            fetch(SAVE_FORM_DATA, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username : props.propsData.location.username,\r\n                    score,\r\n                    userAnswers,\r\n                    data\r\n                }),\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            })\r\n            .then(data => data.json())\r\n            .then(json => console.log(json))\r\n    \r\n    \r\n            props.propsData.history.push({\r\n                pathname : \"/result\",\r\n                username : props.propsData.location.username,\r\n                score,\r\n                userAnswers,\r\n                data\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"questions-block\">\r\n            \r\n            {!error ? \r\n                <form className=\"questions-grid\" onSubmit={handleSubmit}>\r\n                { data && data.map((item,index) => {\r\n                    return (\r\n                        <div key={index} className='question'>\r\n                            <h1>{index+1}: {item.question}</h1>\r\n                            { item.options.map((i, ind) => {\r\n                                return (\r\n                                    <div key={ind}>\r\n                                        <input type='radio' value={i} onChange={handleRadioChange} id={item.questionId} name={item.questionId} required={true}/>\r\n                                        <span>{i}</span>\r\n                                    </div>\r\n                                )\r\n                            }) }\r\n                        </div>\r\n                    )\r\n                }) }\r\n                { !testFinished && <button type=\"submit\" className=\"submitButton\">Submit</button>}\r\n            </form>\r\n            :\r\n            <h1>Cant take the test without username, go back to login page</h1>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions;","import Questions from \"./Components/Questions/Questions\"\nimport { Link } from \"react-router-dom\"\nimport './App.css';\n\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to the Quiz</h1>\n      <Link to='/userData'>See your previous results(if any)</Link>\n      <Questions propsData={props}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"./Results.css\"\r\n\r\nconst Results = (props) => {\r\n\r\n    // useEffect(() => {\r\n    //     console.log(props.location)\r\n    // },[])\r\n\r\n    return (\r\n        <div className=\"results-block\">\r\n            {props.location.data ? \r\n                <div>\r\n                    <h1>Hi, <b>{props.location.username}</b>, your results are:</h1>\r\n                \r\n                    <div className=\"test-title\">\r\n                        <h1>Total Score: <span className=\"score\">{props.location.score}</span></h1>\r\n                        <p>Detailed info below</p>\r\n                    </div>\r\n                    { props.location.data.map((item, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <h1>{item.question}</h1>\r\n                                <p>Correct Answer: {item.correctAnswer}</p>\r\n                                <p>Your answer: {props.location.userAnswers[item.questionId]}</p>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1>No results to show</h1>\r\n                    <Link to=\"/\">Go Home</Link>\r\n                </div> \r\n            } \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React,{ useState, useEffect } from \"react\"\r\nimport { GET_USER_DATA } from \"../../constants\"\r\nimport \"./UserData.css\"\r\n\r\nconst UserData = () => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [userData, setUserData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [dataReceived, setDataReceived] = useState(false)\r\n\r\n\r\n    const handleUsernameChange = e => {\r\n        let name = e.target.value\r\n        setUsername(name)\r\n    }\r\n\r\n    const handleSubmitClick = () => {\r\n        setDataReceived(true)\r\n        setLoading(true)\r\n        let getUserDataApiCall = GET_USER_DATA.replace('_USERNAME_', username)\r\n        \r\n        fetch(getUserDataApiCall)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            setUserData(json)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"userData-block\">\r\n            <div className=\"test-title\">\r\n                <h1>UserData</h1>\r\n                <p>Search your user name to see tour previous results(if any)</p>\r\n                <input type=\"text\" placeholder=\"type here\" value={username} onChange={handleUsernameChange}/>\r\n                <button onClick={handleSubmitClick}>Submit</button>\r\n            </div>\r\n            {loading && <h1>Loading...</h1>}\r\n            { dataReceived && \r\n            <div>\r\n                {(userData.length>0) ? \r\n                <div>\r\n                    { userData.map((item, index) => {\r\n                        return (\r\n                        <React.Fragment key={index}>\r\n                            <hr/>\r\n                            <h3 className=\"test-title\">Test {index+1} Score: <span className=\"score\">{item.score}</span></h3>\r\n                            { item.data.map((i, ind) => {\r\n                                return (\r\n                                <React.Fragment key={ind}>\r\n                                    <h3>{i.question}</h3>\r\n                                    <p>Your answer: {i.correctAnswer}</p>\r\n                                    <p>Actual answer: {item.userAnswers[i.questionId]}</p>\r\n                                </React.Fragment>\r\n                                )\r\n                            }) }\r\n                            <hr/>\r\n                        </React.Fragment>\r\n                        )\r\n                    }) }\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1>Looks like you haven't taken any test</h1>\r\n                </div> }\r\n            </div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserData;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React,{ useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { GET_USER_DATA } from \"../../constants\"\r\n\r\nimport \"./Welcome.css\"\r\n\r\nconst Welcome = () => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [data, setData] = useState([])\r\n    const [dataReceived, setDataReceived] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleUsernameChange = e => {\r\n        let value = e.target.value\r\n\r\n        setUsername(value)\r\n    }\r\n\r\n    const handleUsernameSubmit = () => {\r\n        setLoading(true)\r\n        let userDataValidationApiCall = GET_USER_DATA.replace('_USERNAME_', username.toLowerCase())\r\n\r\n        fetch(userDataValidationApiCall)\r\n        .then(data => data.json())\r\n        .then(json => {\r\n            setData(json)\r\n            setDataReceived(true)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"welcome-block\">\r\n            <h1>Welcome to the login page</h1>\r\n            <div className=\"welcome-login-block\">\r\n                <p>Enter your username</p>\r\n                <input type=\"text\" placeholder=\"type here...\" onChange={handleUsernameChange} value={username}/>\r\n                <button onClick={handleUsernameSubmit}>Submit</button>\r\n            </div>\r\n            {loading && <h4>Loading...</h4>}\r\n            {dataReceived && \r\n                <div>\r\n                    {(data.length === 0) ? \r\n                       <div>\r\n                           <h3>This is the first time you are taking this test</h3>\r\n                           <Link to={{\r\n                                 pathname : '/questions',\r\n                                 username\r\n                            }}>Go to questions page</Link>\r\n                       </div>\r\n                        :\r\n                        <div>\r\n                            <h3>You have previously taken tests</h3>\r\n                            <Link to={{\r\n                                 pathname : '/questions',\r\n                                 username\r\n                            }}>Go to questions page</Link>\r\n                        </div> \r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Route, Switch } from \"react-router-dom\"\n\nimport './index.css';\nimport App from './App';\nimport Results from \"./Components/Results/Results\";\nimport UserData from \"./Components/UserData/UserData\"\nimport reportWebVitals from './reportWebVitals';\nimport Welcome from './Components/Welcome/Welcome';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' component={Welcome} exact/>\n        <Route path='/questions' component={App} exact/>\n        <Route path='/result' component={Results} exact/>\n        <Route path='/userData' component={UserData} exact/>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}